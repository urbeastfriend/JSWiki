
// Каждый отдельный узел, будь то html элемент, его атрибут или текст в структуре DOM
// Представлены объектами Node. Этот объект предоставляет ряд свойств,
// с помощью которых мы можем получить информацию о данном узле

// childNodes: содержит коллекцию дочерних узлов
// firstChild: возвращает первый дочерний узел текущего узла
// lastChild: возвращает последний дочерний узел текущего узла
// previousSibling: возвращает предыдущий элемент, который находится на одном уровне с текущим
// nextSibling: возвращает следующий элемент, который находится на одном уровне с текущим
// ownerDocument: возвращает корневой узел документа
// parentNode: возвращает элемент, который содержит текущий узел
// nodeName: возвращает имя узла
// nodeType: возвращает тип узла в виде числа
// nodeValue: возвращает или устанавливает значение узла в виде простого текста


// Переберём все дочерние узлы элемента

let pContainer = document.querySelector("div.pContainer")
let pNodes = pContainer.childNodes;

// Каждому типу узла сооветствует определённое число
// 1 - элемент
// 2 - атрибут
// 3 - текст
for (let i = 0; i < pNodes.length; i++) {
    let type = "";

    if (pNodes[i].nodeType === 1)
        type = "элемент"
    else if (pNodes[i].nodeType === 2)
        type = "атрибут"
    else if (pNodes[i].nodeType === 3)
        type = "текст"

    console.log(`${pNodes[i].nodeName} ${type}`)
}
// Вывод, несмотря на то что в блоке div меньше узлов, консоль отобразит
// большее количество узлов, потому что пробелы между узлами также считаются
// за текстовые узлы:
//  #text текст
//  A элемент
//  #text текст
//  H3 элемент
//  #text текст
//  P элемент
//  #text текст
//  P элемент
//  #text текст

// Используя свойства nextSibling и previousSibling можно также пройтись по узлам
// в прямом или обратном порядке.

let pContainer2 = document.querySelector("div.pContainer");

// получаем первый дочерний элемент
let node = pContainer2.firstChild;
console.log(node.nodeName);
// обращаемся к следующему узлу, пока он определен
while ((node = node.nextSibling) !== null) {

    console.log(node.nodeName);
}