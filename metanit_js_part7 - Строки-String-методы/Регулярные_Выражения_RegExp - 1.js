// https://metanit.com/web/javascript/6.2.php
// Регулярные выражения представляют шаблон, который используется для поиска или модификации строки.
// Определить регулярное выражение можно двумя способами:
const myExp1 = /hello/;
const myExp2 = new RegExp("hello");
// комбинация выражений где символы в скобках определяют группу - строка должна содержать одну из двух букв
const myExp3 = /[дт]о[нм]/;    // "дом", "том", "дон", "тон".
const myExp4 = /[а-я]/;    // строка должна содержать только буквенные символы из диапазона
const myExp5 = /[^а-я]/;    // или не содержать - ^

let matchingText = "hello world!";
let notMatchingText = "goodbye world!";

const checkResult1 = myExp1.test(matchingText);
const checkResult2 = myExp1.test(notMatchingText);
console.log(checkResult1);
console.log(checkResult2);

// Аналогично работает метод exec - он также проверяет, соответствует ли строка регулярному выражению, только теперь данный метод возвращает ту часть строки, которая соответствует выражению. Если соответствий нет, то возвращается значение null.


// ФЛАГИ ВЫРАЖЕНИЙ
// Флаги позволяют настроить поведение регулярных выражений. Каждый флаг представляет отдельный символ, который ставится в конце регулярного выражения. В JavaScript применяются следующие флаги:
// Флаг global позволяет найти все подстроки, которые соответствуют регулярному выражению. По умолчанию при поиске подстрок регулярное выражение выбирает первую попавшуюся подстроку из строки, которая соответствует выражению. Хотя в строке может быть множество подстрок, которые также соответствуют выражению. Для этого применяется данный флаг в виде символа  - g

// Флаг ignoreCase позволяет найти подстоки, которые соответствуют регулярному выражению, вне зависимости от регистра символов в строке. Для этого в регулярных выражениях применяется символ  - i

// Флаг multiline позволяет найти подстроки, которые соответствуют регулярному выражению, в многострочном тексте. Для этого в регулярных выражениях применяется символ  - m

// Флаг dotAll позволяет сопоставить точку в регулярном выражении с любым символом текста, в том числе с разделителем строки. Для этого в регулярных выражениях применяется символ  - s

// Флаг i Регистр символов

const exp7 = /мир/i;   // игнорируем регистр
const exp8 = /мир/g;   // ищет множество подстрок, а не одну (как оно действует по умолчанию)
const exp9 = /мир/ig;   // комбинация флагов

// Флаг s или dotAll позволяет сопоставить символ . (точка) с любым символом, в том числе и с разделителем строки.
const text = "hello\nworld";        // тут у нас слова разделены переносом строки, но мы можем его проигнорировать
const exp10 = /hello world/;
const exp11 = /hello.world/s;        // точка представляет собой произвольный символ, в данном случае символ переноса строки

const result = exp10.test(text); // false
console.log(result);    // false

const result2 = exp11.test(text); // true
console.log(result);    // true